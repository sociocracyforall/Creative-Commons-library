<?xml version='1.0'?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version='1.0'>
  <!-- Don't show any list of titled items: -->
  <xsl:param name="doc.lot.show"></xsl:param>

  <xsl:param name="latex.class.book">book</xsl:param>

  <xsl:param name="latex.class.options">openany,twoside,10pt</xsl:param>

  <xsl:param name="page.width">8in</xsl:param>
  <xsl:param name="geometry.options">paperheight=10in, height=8.75in,
	paperwidth=8in, textwidth=6.25in,
	marginratio={2:3,1:1},
	bindingoffset=0.3in,
	includeheadfoot,
	dvips=false,pdftex=false,vtex=false</xsl:param>

  <xsl:param name="latex.encoding">utf8</xsl:param>

  <xsl:param name="doc.collab.show">0</xsl:param>

  <xsl:param name="latex.output.revhistory">0</xsl:param>

  <xsl:param name="preface.tocdepth">0</xsl:param>

  <xsl:param name="glossary.tocdepth">0</xsl:param>

  <xsl:param name="glossary.numbered">0</xsl:param>

  <xsl:param name="index.numbered">0</xsl:param>

  <xsl:param name="toc.section.depth">2</xsl:param>

  <xsl:param name="latex.hyperparam">hyperindex=false</xsl:param>

  <!-- Use the font from the LaTeX style definition, instead -->
  <xsl:param name="xetex.font"/>

  <xsl:param name="local.l10n.xml" select="document('')"/>
  <l:i18n xmlns:l="http://docbook.sourceforge.net/xmlns/l10n/1.0">
    <l:l10n language="en">
      <l:context name="xref-number">
        <l:template name="chapter" text="chapter %n"/>
        <l:template name="figure" text="figure %n"/>
        <l:template name="section" text="section %n"/>
      </l:context>
      <l:context name="xref">
        <l:template name="page" text="on page %p"/>
      </l:context>
    </l:l10n>
  </l:i18n>

  <xsl:template match="acknowledgements">
    <xsl:call-template name="maketitle">
      <xsl:with-param name="title">
        <xsl:call-template name="gentext">
          <xsl:with-param name="key" select="'Acknowledgements'"/>
        </xsl:call-template>
      </xsl:with-param>
    </xsl:call-template>
    <xsl:apply-templates/>
  </xsl:template>

  <xsl:template match="colophon">
    <xsl:call-template name="maketitle">
      <xsl:with-param name="title">
        <xsl:call-template name="gentext">
          <xsl:with-param name="key" select="'Colophon'"/>
        </xsl:call-template>
      </xsl:with-param>
    </xsl:call-template>
    <xsl:apply-templates/>
  </xsl:template>

  <xsl:template match="dedication">
    <xsl:call-template name="maketitle">
      <xsl:with-param name="title">
        <xsl:call-template name="gentext">
          <xsl:with-param name="key" select="'Dedication'"/>
        </xsl:call-template>
      </xsl:with-param>
    </xsl:call-template>
    <xsl:apply-templates/>
  </xsl:template>

  <xsl:template match="preface">
    <xsl:text>&#10;</xsl:text>
    <xsl:text>% ------- &#10;</xsl:text>
    <xsl:text>% Preface &#10;</xsl:text>
    <xsl:text>% ------- &#10;</xsl:text>
    <!--xsl:apply-templates select="." mode="endnotes"/-->
    <xsl:call-template name="mapheading"/>
    <xsl:apply-templates/>
  </xsl:template>

  <xsl:template match="book/glossary">
    <xsl:text>&#10;</xsl:text>
    <xsl:text>% ------- &#10;</xsl:text>
    <xsl:text>% Glossary &#10;</xsl:text>
    <xsl:text>% ------- &#10;</xsl:text>
    <!--xsl:apply-templates select="." mode="endnotes"/-->
    <xsl:call-template name="maketitle">
      <xsl:with-param name="title">
        <xsl:call-template name="gentext">
          <xsl:with-param name="key" select="'Glossary'"/>
        </xsl:call-template>
      </xsl:with-param>
      <xsl:with-param name="command">
        <xsl:call-template name="sec-map">
          <xsl:with-param name="keyword" select="'preface'"/>
        </xsl:call-template>
      </xsl:with-param>
    </xsl:call-template>
    <xsl:apply-templates/>
  </xsl:template>

  <xsl:template match="glosslist">
    <xsl:text>\bgroup \def\arraystretch{1.4}&#10;</xsl:text>
    <xsl:text>\begin{longtable}{p{0.18\linewidth}p{0.78\linewidth}}&#10;</xsl:text>
    <xsl:text>&amp; \\\hline\hline&#10;</xsl:text>
    <xsl:apply-templates/>
    <xsl:text>\hline&#10;\end{longtable}&#10;\egroup&#10;</xsl:text>
  </xsl:template>

  <xsl:template match="glossentry">
    <xsl:apply-templates/>
  </xsl:template>

  <xsl:template match="glossterm">
    <xsl:apply-templates/>
    <xsl:text>&amp;</xsl:text>
  </xsl:template>

  <xsl:template match="glossdef">
    <xsl:apply-templates/>
    <xsl:text>\\\hline&#10;</xsl:text>
  </xsl:template>

  <!-- Override the built-in template to basically completely customize the preamble -->
  <xsl:template match="book|article" mode="preamble-disabled">
    <xsl:param name="lang"/>
    <xsl:variable name="info" select="bookinfo|articleinfo|artheader|info"/>

    <xsl:text>% -----------------------------------------  &#10;</xsl:text>
    <xsl:text>% Autogenerated LaTeX file from XML DocBook  &#10;</xsl:text>
    <xsl:text>% -----------------------------------------  &#10;</xsl:text>
    <!-- Parameters to pass to python parser -->
    <xsl:call-template name="py.params.set"/>
    <xsl:text>\documentclass</xsl:text>
    <xsl:if test="$latex.class.options!=''">
      <xsl:value-of select="concat('[',$latex.class.options,']')"/>
    </xsl:if>
    <xsl:text>{</xsl:text>
    <xsl:choose>
      <xsl:when test="self::book">
        <xsl:value-of select="$latex.class.book"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$latex.class.article"/>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:text>}&#10;</xsl:text>

    <xsl:variable name="external.docs">
      <xsl:call-template name="make.external.docs"/>
    </xsl:variable>
    
    <xsl:call-template name="encode.before.style">
      <xsl:with-param name="lang" select="$lang"/>
    </xsl:call-template>
    <xsl:text>\usepackage{fancybox}&#10;</xsl:text>
    <xsl:text>\usepackage{makeidx}&#10;</xsl:text>

    <xsl:call-template name="user.params.set"/>
    <!-- Load babel before the style (bug #babel/3875) -->
    <xsl:call-template name="babel.setup"/>

    <!-- Load xr before hyperref -->
    <xsl:if test="$external.docs != ''">
      <xsl:text>\usepackage{xr-hyper}&#10;</xsl:text>
    </xsl:if>

    <!-- Paper and Page setup -->
    <xsl:call-template name="page.setup"/>

    <xsl:text>\usepackage[hyperlink]{</xsl:text>
    <xsl:value-of select="$latex.style"/>
    <xsl:text>}&#10;</xsl:text>

    <xsl:call-template name="encode.after.style">
      <xsl:with-param name="lang" select="$lang"/>
    </xsl:call-template>
    <xsl:call-template name="lang.setup"/>
    <xsl:call-template name="image.setup"/>
    <xsl:call-template name="citation.setup"/>
    <xsl:call-template name="biblio.setup"/>
    <xsl:call-template name="footnote.setup"/>
    <xsl:call-template name="annotation.setup"/>
    <xsl:call-template name="user.params.set2"/>
    <xsl:call-template name="inline.setup"/>
    <xsl:apply-templates select="." mode="docinfo"/>

    <!-- Document title -->
    <xsl:variable name="title">
      <xsl:apply-templates select="(title
                                   |info/title
                                   |bookinfo/title
                                   |articleinfo/title
                                   |artheader/title)[1]" mode="coverpage"/>
    </xsl:variable>

    <!-- Get the Authors -->
    <xsl:variable name="authors">
      <xsl:if test="$info">
        <xsl:choose>
          <xsl:when test="$info/authorgroup/author">
            <xsl:apply-templates select="$info/authorgroup"/>
          </xsl:when>
          <xsl:when test="$info/author">
            <xsl:call-template name="person.name.list">
              <xsl:with-param name="person.list" select="$info/author"/>
            </xsl:call-template>
          </xsl:when>
        </xsl:choose>
      </xsl:if>
    </xsl:variable>

    <xsl:text>\title{</xsl:text>
    <xsl:value-of select="$title"/>
    <xsl:text>}&#10;</xsl:text>
    <xsl:text>\author{</xsl:text>
    <xsl:value-of select="$authors"/>
    <xsl:text>}&#10;</xsl:text>

    <!-- Fill the PDF metadata -->
    <xsl:call-template name="pdf-document-information">
      <xsl:with-param name="pdfauthor" select="$authors"/>
    </xsl:call-template>

    <!-- The external documents -->
    <xsl:if test="$external.docs != ''">
      <xsl:value-of select="$external.docs"/>
    </xsl:if>

    <!-- Set the collaborator table -->
    <xsl:call-template name="collab.setup">
      <xsl:with-param name="authors" select="$authors"/>
    </xsl:call-template>

    <xsl:text>\makeindex&#10;</xsl:text>
    <xsl:text>\makeglossary&#10;</xsl:text>

    <!-- Apply the revision history here -->
    <xsl:apply-templates select="$info/revhistory"/>

    <xsl:call-template name="verbatim.setup"/>
  </xsl:template>

  <!-- Override the built-in template to add a short table of contents -->
  <xsl:template match="book|article" mode="toc_lots">
    <xsl:if test="$doc.toc.show != '0'">
      <xsl:text>\shorttoc{Short table of contents}{1}&#10;</xsl:text>
      <xsl:text>\renewcommand\contentsname{Detailed table of contents}&#10;</xsl:text>
      <xsl:text>\setcounter{tocdepth}{3}&#10;</xsl:text>
      <xsl:text>\tableofcontents&#10;</xsl:text>
    </xsl:if>
    <xsl:apply-templates select="." mode="lots"/>
  </xsl:template>

  <xsl:template match="indexterm/@significance">
    <xsl:choose>
      <xsl:when test=". = 'preferred'">
        <xsl:text>|textbf</xsl:text>
      </xsl:when>
    </xsl:choose>
  </xsl:template>

  <xsl:template match="informalfigure[@role = 'guide']">
    <xsl:text>\begin{quotationb}&#10;</xsl:text>
    <xsl:apply-templates/>
    <xsl:text>\end{quotationb}&#10;</xsl:text>
  </xsl:template>

  <!-- Target Database set by the command line

  <xsl:param name="target.database.document">olinkdb.xml</xsl:param>
  -->

  <!-- Use the Bob Stayton's Tip related to olinking -->
  <!--xsl:param name="current.docid" select="/*/@id"/-->

  <!-- Use the literal scaling feature -->
  <!--xsl:param name="literal.extensions">scale.by.width</xsl:param-->

  <!-- We want the TOC links in the titles, and in blue. -->
  <!--xsl:param name="latex.hyperparam">colorlinks,linkcolor=blue,pdfstartview=FitH</xsl:param-->

  <!-- Put the dblatex logo -->
  <!--xsl:param name="doc.publisher.show">1</xsl:param-->

  <!-- Show the list of examples too -->
  <!--xsl:param name="doc.lot.show">figure,table,example</xsl:param-->

  <!-- DocBook like description -->
  <!--xsl:param name="term.breakline">1</xsl:param-->

  <!-- Manpage titles not numbered -->
  <!--xsl:param name="refentry.numbered">0</xsl:param-->
</xsl:stylesheet>
